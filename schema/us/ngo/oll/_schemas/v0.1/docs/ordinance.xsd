<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
    targetNamespace="https://open.law/schemas/library" xmlns="https://open.law/schemas/library"
    xmlns:codify="https://open.law/schemas/codify"
    xmlns:codified="https://open.law/schemas/codified">
    <xs:import namespace="https://open.law/schemas/codify" schemaLocation="../codify/codify.xsd"/>
    <xs:import namespace="https://open.law/schemas/codified" schemaLocation="../codify/codified.xsd"/>
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="../../libs/xml.xsd"/>
    <xs:redefine schemaLocation="../../partials/docs/default.xsd">
        <xs:complexType name="AftertextType">
            <xs:complexContent>
                <xs:extension base="AftertextType"/>
            </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="CiteType">
            <xs:complexContent>
                <xs:extension base="CiteType">
                    <xs:attribute ref="codify:value"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="ContainerType">
            <xs:complexContent>
                <xs:extension base="ContainerType">
                    <xs:attribute ref="codify:path"/>
                    <xs:attribute ref="codify:doc"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="DocumentType">
            <xs:complexContent>
                <xs:extension base="DocumentType">
                    <xs:attributeGroup ref="codify:AllAttributesAttrGroup"/>
                    <xs:attribute ref="xml:base"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="SectionType">
            <xs:complexContent>
                <xs:extension base="SectionType">
                    <xs:attributeGroup ref="codify:AllAttributesAttrGroup"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="HeadingType">
            <xs:complexContent>
                <xs:extension base="HeadingType">
                    <xs:attribute ref="codify:value"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="PrefixType">
            <xs:complexContent>
                <xs:extension base="PrefixType">
                    <xs:attribute ref="codify:value"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="NumType">
            <xs:complexContent>
                <xs:extension base="NumType">
                    <xs:attributeGroup ref="codify:AllAttributesAttrGroup"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="ParaType">
            <xs:complexContent>
                <xs:extension base="ParaType">
                    <xs:attributeGroup ref="codify:AllAttributesAttrGroup"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:group name="DocumentBodyElGroup">
            <xs:sequence>
                <xs:group ref="DocumentBodyElGroup"/>
                <xs:element ref="recitals" minOccurs="0"/>
            </xs:sequence>
        </xs:group>
        <xs:group name="TocExtensionElGroup">
            <xs:choice>
                <xs:group ref="TocExtensionElGroup"/>
                <xs:element ref="heading"/>
            </xs:choice>
        </xs:group>
        <xs:group name="SectionHeaderElGroup">
            <xs:sequence>
                <xs:group ref="SectionHeaderElGroup"/>
                <xs:any maxOccurs="unbounded" minOccurs="0"
                    namespace="https://open.law/schemas/codify"/>
            </xs:sequence>
        </xs:group>
        <xs:group name="SectionBodyElGroup">
            <xs:sequence>
                <xs:group ref="SectionBodyElGroup"/>
                <xs:any maxOccurs="unbounded" minOccurs="0"
                    namespace="https://open.law/schemas/codify"/>
            </xs:sequence>
        </xs:group>
        <xs:group name="ContainerHeaderElGroup">
            <xs:sequence>
                <xs:group ref="ContainerHeaderElGroup"/>
                <xs:any maxOccurs="unbounded" minOccurs="0"
                    namespace="https://open.law/schemas/codify"/>
                <xs:element minOccurs="0" ref="codified:at"/>
            </xs:sequence>
        </xs:group>
        <xs:group name="ContainerFooterElGroup">
            <xs:sequence>
                <xs:group ref="ContainerFooterElGroup"/>
                <xs:any namespace="https://open.law/schemas/codify"/>
            </xs:sequence>
        </xs:group>
        <xs:group name="DocumentHeaderElGroup">
            <xs:sequence>
                <xs:group ref="DocumentHeaderElGroup"/>
                <xs:any maxOccurs="unbounded" minOccurs="0"
                    namespace="https://open.law/schemas/codify"/>
                <xs:element minOccurs="0" ref="codified:at"/>
            </xs:sequence>
        </xs:group>
        <xs:group name="DocumentFooterElGroup">
            <xs:choice>
                <xs:group ref="DocumentFooterElGroup"/>
                <xs:any namespace="https://open.law/schemas/codify"/>
                <xs:element ref="procedural-data"/>
                <xs:element ref="attachment"/>
            </xs:choice>
        </xs:group>
        <xs:group name="IncludeBodyElGroup">
            <xs:choice>
                <xs:group ref="IncludeBodyElGroup"/>
                <xs:any namespace="https://open.law/schemas/codify"/>
            </xs:choice>
        </xs:group>
        <xs:group name="ParaHeaderElGroup">
            <xs:choice>
                <xs:group ref="ParaHeaderElGroup"/>
                <xs:element ref="codify:insert"/>
                <xs:element ref="codify:organic"/>
                <xs:element ref="codify:replace"/>
                <xs:element ref="codify:ignore"/>
                <xs:element ref="codify:temporary"/>
            </xs:choice>
        </xs:group>
        <xs:group name="ParaFooterElGroup">
            <xs:sequence>
                <xs:group ref="ParaFooterElGroup"/>
                <xs:any maxOccurs="unbounded" minOccurs="0"
                    namespace="https://open.law/schemas/codify"/>
            </xs:sequence>
        </xs:group>
    </xs:redefine>
    <xs:element name="attachment" type="AttachmentType"/>
    <xs:element name="collection" type="CollectionType"/>
    <xs:element name="conjunction" type="ConjunctionType"/>
    <xs:element name="recital" type="RecitalType"/>
    <xs:element name="recitals" type="RecitalsType"/>
    <xs:element name="procedural-data" type="ProceduralDataType"/>
    <xs:complexType name="ProceduralDataType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:any minOccurs="1" namespace="https://open.law/schemas/library"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="RecitalsType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="recital"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="RecitalType">
        <xs:sequence>
            <xs:element minOccurs="1" ref="conjunction"/>
            <xs:element name="text" type="xs:anyType" maxOccurs="unbounded"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" ref="para"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="https://open.law/schemas/codify"
            />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="CollectionType">
        <xs:choice maxOccurs="unbounded" minOccurs="1">
            <xs:any namespace="https://open.law/schemas/library"/>
        </xs:choice>
        <xs:attribute name="name"/>
    </xs:complexType>
    <xs:complexType name="AttachmentType">
        <xs:choice maxOccurs="unbounded">
            <xs:any namespace="https://open.law/schemas/library"/>
        </xs:choice>
        <xs:attribute name="id"/>
    </xs:complexType>
    <xs:simpleType name="ConjunctionType">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
</xs:schema>
